package fr.hokanosekai.commands;import fr.hokanosekai.Main;import fr.hokanosekai.db.DbConnection;import org.bukkit.Bukkit;import org.bukkit.ChatColor;import org.bukkit.command.Command;import org.bukkit.command.CommandExecutor;import org.bukkit.command.CommandSender;import org.bukkit.configuration.file.FileConfiguration;import org.bukkit.entity.Player;import org.bukkit.potion.PotionEffectType;import java.sql.*;import java.util.UUID;public class Register implements CommandExecutor {    Main main;    FileConfiguration config;    public Register(Main main){        this.main = main;        config = main.getConfiguration();    }    @Override    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {        if (label.equalsIgnoreCase("register")){            if (sender instanceof Player){                Player player = (Player) sender;                UUID uuid = player.getUniqueId();                if (args.length == 2){                    if (args[0].equals(args[1])){                        final DbConnection loginConnection = main.getDbManager().getLoginConnection();                        try {                            final Connection connection = loginConnection.getConnection();                            final PreparedStatement preparedStatement = connection.prepareStatement("SELECT * FROM players WHERE uuid = ?");                            preparedStatement.setString(1, uuid.toString());                            final ResultSet resultSet = preparedStatement.executeQuery();                            if (resultSet.next()){                                player.sendMessage(ChatColor.translateAlternateColorCodes('&', config.getString("msg.alreadyregister")));                                return true;                            } else {                                registerPlayer(connection, uuid, args[0]);                                player.sendTitle(ChatColor.translateAlternateColorCodes('&', config.getString("msg.registered")), "");                                player.removePotionEffect(PotionEffectType.BLINDNESS);                                return true;                            }                        } catch (SQLException throwables) {                            throwables.printStackTrace();                        }                    } else {                        player.sendMessage(ChatColor.translateAlternateColorCodes('&', config.getString("msg.samepassword")));                        return true;                    }                } else {                    player.sendMessage("Â§cUsage : /register <password> <password>");                    return true;                }            }            return true;        }        return false;    }    public void registerPlayer(Connection connection, UUID uuid, String password){        try {            final PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO players (pseudo, uuid, passwd, create_at) VALUES (?,?,?,?)");            final long time = System.currentTimeMillis();            preparedStatement.setString(1, Bukkit.getPlayer(uuid).getDisplayName());            preparedStatement.setString(2, uuid.toString());            preparedStatement.setString(3, password);            preparedStatement.setTimestamp(4, new Timestamp(time));            preparedStatement.executeUpdate();            main.getLoginManager().getPlayerLogged().put(uuid, password);        } catch (SQLException throwables) {            throwables.printStackTrace();        }    }}